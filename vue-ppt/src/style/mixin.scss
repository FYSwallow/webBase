
// 使用flex布局
/*
    flex布局
    一. 容器属性
        1. flex-direction: row(默认) ---->从左到右水平方向排列) row-reverse ----> 从右到左水平方向排列
            column ----> 从上到下垂直方向排列 column-reverse ----> 从下到上垂直排列
        2. flex-warp: nowarp(默认)--->不换行  warp--->换行,第一行在上方  warp-reverse  --->换行,第一行在下方
        3. justify-content: flex-start（默认值）---->左对齐  flex-end：右对齐
            center ----> 居中 space-between ----> 两端对齐，项目之间的间隔都相等。space-around ----> 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍
        4. align-items: flex-start：侧轴的起点对齐。flex-end：侧轴的终点对齐。center：侧轴的中点对齐。
            baseline: 项目的第一行文字的基线对齐。 stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
        5. align-content: 
    二. 项目属性
        1. order (排列顺序,越靠前,数值越小)
        2. flex-grow: 项目的放大比例, 默认为0,放大宽度 = (num / 各项num之和) * 剩余空间
        3. flex-shrink: 缩小比例
        4. felx-basis: 占主轴的长度, 与width或height相同
        5. flex: 属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto
        6. align-self: 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性
*/
@mixin fj($type: space-between) {
    display: flex;
    justify-content: $type;
}
// 使用行高居中
@mixin hm($height) {
    height: $height;
    line-height: $height;
}

// 设置盒子的大小
@mixin wh() {
    width: 100%;
    height: 100%;
}

